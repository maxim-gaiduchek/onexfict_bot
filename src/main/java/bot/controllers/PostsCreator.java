package bot.controllers;

import bot.Main;
import bot.entities.BotUser;
import bot.entities.Post;
import bot.utils.SimpleSender;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardRow;

import java.util.List;

public class PostsCreator {

    public static final String STOP_ADDING_PHOTO_STRING = "‚ùå –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ";
    public static final String STOP_CREATING_POST_STRING = "‚ùå –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–∞";
    public static final String SKIP_ADDING_TEXT_STRING = "‚ùå –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —ç—Ç–æ—Ç —à–∞–≥";

    private PostsCreator() {
    }

    // media

    public static void sendAddPhoto(SimpleSender sender, Long chatId) {
        sender.sendStringAndRemoveKeyboard(chatId, "\uD83D\uDDBC –°–∫–∏–Ω—å—Ç–µ –º–µ–º");
    }

    public static void sendAddPhoto(SimpleSender sender, BotUser user) {
        user.setStatus(BotUser.Status.IS_ADDING_PHOTO);
        user.setPost(new Post(user));
        sendAddPhoto(sender, user.getChatId());
    }

    public static void addPhoto(SimpleSender sender, Long chatId) {
        String msg = """
                üñº –°–∫–∏–Ω—å—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –º–µ–º–∞ –∏–ª–∏ –µ—â–µ –æ–¥–∏–Ω –º–µ–º""";

        sender.sendStringAndKeyboard(chatId, msg, getAddPhotoKeyboard(), true);
    }

    public static void addPhoto(SimpleSender sender, BotUser user, String fileId) {
        user.setStatus(BotUser.Status.IS_ADDING_PHOTO);
        user.getPost().addImageFileId(fileId);
        addPhoto(sender, user.getChatId());
    }

    // text

    public static void sendAddText(SimpleSender sender, Long chatId) {
        String msg = """
                \uD83D\uDCC3 –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∫ –º–µ–º—É, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø–æ–¥ —Ñ–æ—Ç–∫–∞–º–∏ –≤ –ø–æ—Å—Ç–µ""";

        sender.sendStringAndKeyboard(chatId, msg, getSkipStepKeyboard(), true);
    }

    public static void sendAddText(SimpleSender sender, BotUser user) {
        user.setStatus(BotUser.Status.IS_ADDING_TEXT);
        sendAddText(sender, user.getChatId());
    }

    public static void addText(SimpleSender sender, BotUser user, String text) {
        if (!text.equals(SKIP_ADDING_TEXT_STRING)) {
            user.getPost().setText(text);
        }
        sendAddBy(sender, user);
    }

    // by

    public static void sendAddBy(SimpleSender sender, Long chatId) {
        String msg = """
                \uD83D\uDC65 –í–≤–µ–¥–∏—Ç–µ, –æ—Ç –∫–æ–≥–æ —ç—Ç–æ—Ç –º–µ–º (–ø–æ–¥ –º–µ–º–æ–º –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–æ "by <–∏–º—è>")""";

        sender.sendStringAndKeyboard(chatId, msg, getSkipStepKeyboard(), true);
    }

    public static void sendAddBy(SimpleSender sender, BotUser user) {
        user.setStatus(BotUser.Status.IS_ADDING_BY);
        sendAddBy(sender, user.getChatId());
    }

    public static void addBy(SimpleSender sender, BotUser user, String by) {
        if (!by.equals(SKIP_ADDING_TEXT_STRING)) {
            user.getPost().setBy(by);
        }
        sendAddSource(sender, user);
    }

    // source

    public static void sendAddSource(SimpleSender sender, Long chatId) {
        String msg = """
                üåê –í–≤–µ–¥–∏—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫ –∫ —ç—Ç–æ–º—É –º–µ–º—É (–µ—Å–ª–∏ –Ω–∞–¥–æ)""";

        sender.sendStringAndKeyboard(chatId, msg, getSkipStepKeyboard(), true);
    }

    public static void sendSourceError(SimpleSender sender, Long chatId) {
        String msg = """
                üåê –°—Å—ã–ª–∫–∞ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è –Ω–∞ "https://\"""";

        sender.sendStringAndKeyboard(chatId, msg, getSkipStepKeyboard(), true);
    }

    public static void sendAddSource(SimpleSender sender, BotUser user) {
        user.setStatus(BotUser.Status.IS_ADDING_SOURCE);
        sendAddSource(sender, user.getChatId());
    }

    public static void addSource(SimpleSender sender, BotUser user, String source) {
        String msg = """
                üëç –°–ø–∞—Å–∏–±–æ –∑–∞ –º–µ–º–µ—Å. –ï–≥–æ –ø—Ä–æ–≤–µ—Ä—è—Ç –∞–¥–º–∏–Ω—ã –∏ –∑–∞–ø–æ—Å—Ç—è—Ç –Ω–∞ –∫–∞–Ω–∞–ª""";

        if (!source.equals(SKIP_ADDING_TEXT_STRING)) {
            user.getPost().setSource(source);
        }

        user.setStatus(BotUser.Status.INACTIVE);
        sender.sendStringAndKeyboard(user.getChatId(), msg, Main.getCreatePostKeyboard(), true);
    }

    // keyboards

    private static List<KeyboardRow> getAddPhotoKeyboard() {
        return getKeyboard(STOP_ADDING_PHOTO_STRING);
    }

    private static List<KeyboardRow> getSkipStepKeyboard() {
        return getKeyboard(SKIP_ADDING_TEXT_STRING);
    }

    private static List<KeyboardRow> getKeyboard(String str) {
        return Main.getTwoRowsKeyboard(STOP_CREATING_POST_STRING, str);
    }
}
