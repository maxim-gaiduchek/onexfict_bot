package bot.controllers;

import bot.Main;
import bot.entities.BotUser;
import bot.entities.Post;
import bot.utils.SimpleSender;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardRow;

import java.util.List;

public class PostsCreator {

    public static final String STOP_ADDING_PHOTO_STRING = "‚ùå –ó—É–ø–∏–Ω–∏—Ç–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—è";
    public static final String STOP_CREATING_POST_STRING = "‚ùå –ó—É–ø–∏–Ω–∏—Ç–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ—Å—Ç—É";
    public static final String SKIP_ADDING_TEXT_STRING = "‚ùå –ü—Ä–æ–ø—É—Å—Ç–∏—Ç–∏ —Ü–µ–π –∫—Ä–æ–∫";

    private PostsCreator() {
    }

    // media

    public static void sendAddPhoto(SimpleSender sender, Long chatId) {
        sender.sendStringAndKeyboard(chatId, "\uD83D\uDDBC –°–∫–∏–Ω—å—Ç–µ –º–µ–º", getSkipStepKeyboard());
    }

    public static void sendAddPhoto(SimpleSender sender, BotUser user) {
        user.setStatus(BotUser.Status.IS_ADDING_PHOTO);
        user.setPost(new Post(user));
        sendAddPhoto(sender, user.getChatId());
    }

    public static void addPhoto(SimpleSender sender, Long chatId) {
        String msg = """
                üñº –°–∫–∏–Ω—å—Ç–µ –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è –º–µ–º–∞ –∞–±–æ —â–µ –æ–¥–∏–Ω –º–µ–º""";

        sender.sendStringAndKeyboard(chatId, msg, getAddPhotoKeyboard(), true);
    }

    public static void addPhoto(SimpleSender sender, BotUser user, String fileId) {
        user.setStatus(BotUser.Status.IS_ADDING_PHOTO);
        user.getPost().addImageFileId(fileId);
        addPhoto(sender, user.getChatId());
    }

    // text

    public static void sendAddText(SimpleSender sender, Long chatId) {
        String msg = """
                \uD83D\uDCC3 –í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –¥–æ –º–µ–º—É, —è–∫–∏–π –±—É–¥–µ –ø—ñ–¥ —Ñ–æ—Ç–∫–∞–º–∏ —É –ø–æ—Å—Ç—ñ""";

        sender.sendStringAndKeyboard(chatId, msg, getSkipStepKeyboard(), true);
    }

    public static void sendAddText(SimpleSender sender, BotUser user) {
        user.setStatus(BotUser.Status.IS_ADDING_TEXT);
        sendAddText(sender, user.getChatId());
    }

    public static void addText(SimpleSender sender, BotUser user, String text) {
        if (!text.equals(SKIP_ADDING_TEXT_STRING)) {
            user.getPost().setText(text);
        }
        sendAddBy(sender, user);
    }

    // by

    public static void sendAddBy(SimpleSender sender, Long chatId) {
        String msg = """
                \uD83D\uDC65 –í–≤–µ–¥—ñ—Ç—å, –≤—ñ–¥ –∫–æ–≥–æ —Ü–µ–π –º–µ–º (–ø—ñ–¥ –º–µ–º–æ–º –±—É–¥–µ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–æ "by <—ñ–º'—è>")""";

        sender.sendStringAndKeyboard(chatId, msg, getSkipStepKeyboard(), true);
    }

    public static void sendAddBy(SimpleSender sender, BotUser user) {
        user.setStatus(BotUser.Status.IS_ADDING_BY);
        sendAddBy(sender, user.getChatId());
    }

    public static void addBy(SimpleSender sender, BotUser user, String by) {
        if (!by.equals(SKIP_ADDING_TEXT_STRING)) {
            if (by.startsWith("by ")) by = by.substring(3);

            user.getPost().setBy(by);
        }
        sendAddSource(sender, user);
    }

    // source

    public static void sendAddSource(SimpleSender sender, Long chatId) {
        String msg = """
                üåê –í–≤–µ–¥—ñ—Ç—å –¥–∂–µ—Ä–µ–ª–æ –¥–æ —Ü—å–æ–≥–æ –º–µ–º—É (—è–∫—â–æ —Ç—Ä–µ–±–∞)""";

        sender.sendStringAndKeyboard(chatId, msg, getSkipStepKeyboard(), true);
    }

    public static void sendSourceError(SimpleSender sender, Long chatId) {
        String msg = """
                üåê –ü–æ—Å–∏–ª–∞–Ω–Ω—è –º–∞—î –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –Ω–∞ "https://\"""";

        sender.sendStringAndKeyboard(chatId, msg, getSkipStepKeyboard(), true);
    }

    public static void sendAddSource(SimpleSender sender, BotUser user) {
        user.setStatus(BotUser.Status.IS_ADDING_SOURCE);
        sendAddSource(sender, user.getChatId());
    }

    public static void addSource(SimpleSender sender, BotUser user, String source) {
        String msg = """
                üëç –î—è–∫—É—é –∑–∞ –º–µ–º–µ—Å. –ô–æ–≥–æ –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç—å –∞–¥–º—ñ–Ω–∏ —Ç–∞ –∑–∞–ø–æ—Å—Ç—ñ—Ç—å –Ω–∞ –∫–∞–Ω–∞–ª""";

        if (!source.equals(SKIP_ADDING_TEXT_STRING)) {
            user.getPost().setSource(source);
        }

        user.setStatus(BotUser.Status.INACTIVE);
        sender.sendStringAndKeyboard(user.getChatId(), msg, Main.getCreatePostKeyboard(), true);
    }

    // keyboards

    private static List<KeyboardRow> getAddPhotoKeyboard() {
        return getKeyboard(STOP_ADDING_PHOTO_STRING);
    }

    private static List<KeyboardRow> getSkipStepKeyboard() {
        return getKeyboard(SKIP_ADDING_TEXT_STRING);
    }

    private static List<KeyboardRow> getKeyboard(String str) {
        return Main.getTwoRowsKeyboard(STOP_CREATING_POST_STRING, str);
    }
}
